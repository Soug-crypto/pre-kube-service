version: '3.2'
services:
  # zookeeper:
  #   image: confluentinc/cp-zookeeper
  #   ports:
  #   - "2181:2181"
  #   - "2888:2888"
  #   - "3888:3888"
  #   healthcheck:
  #     test: echo stat | nc localhost 2181
  #     interval: 10s
  #     timeout: 10s
  #     retries: 3
  #   environment:
  #   - ZOOKEEPER_SERVER_ID=1
  #   - ZOOKEEPER_CLIENT_PORT=2181
  #   - ZOOKEEPER_TICK_TIME=2000
  #   - ZOOKEEPER_INIT_LIMIT=5
  #   - ZOOKEEPER_SYNC_LIMIT=2
  #   - ZOOKEEPER_SERVERS=zookeeper:2888:3888
  # kafka1:
  #   image: confluentinc/cp-kafka
  #   healthcheck:
  #     test: ps augwwx | egrep [S]upportedKafka
  #   depends_on:
  #   - zookeeper
  #   ports:
  #   - "9091:9091"
  #   - "9997"
  #   environment:
  #   - KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://kafka1:9091
  #   - KAFKA_LISTENERS=PLAINTEXT://0.0.0.0:9091
  #   - KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181
  #   - KAFKA_BROKER_ID=1
  #   - BOOTSTRAP_SERVERS=kafka1:9091,kafka2:9092,kafka3:9093
  #   - ZOOKEEPER=zookeeper:2181
  #   - "KAFKA_JMX_OPTS=-Dcom.sun.management.jmxremote -Dcom.sun.management.jmxremote.authenticate=false -Dcom.sun.management.jmxremote.ssl=false -Djava.rmi.server.hostname=kafka -Dcom.sun.management.jmxremote.rmi.port=9997"
  #   - JMX_PORT=9997
  # kafka2:
  #   image: confluentinc/cp-kafka
  #   healthcheck:
  #     test: ps augwwx | egrep [S]upportedKafka
  #   depends_on:
  #   - zookeeper
  #   ports:
  #   - "9092:9092"
  #   - "9997"
  #   environment:
  #   - KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://kafka2:9092
  #   - KAFKA_LISTENERS=PLAINTEXT://0.0.0.0:9092
  #   - KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181
  #   - KAFKA_BROKER_ID=2
  #   - BOOTSTRAP_SERVERS=kafka1:9091,kafka2:9092,kafka3:9093
  #   - ZOOKEEPER=zookeeper:2181
  #   - "KAFKA_JMX_OPTS=-Dcom.sun.management.jmxremote -Dcom.sun.management.jmxremote.authenticate=false -Dcom.sun.management.jmxremote.ssl=false -Djava.rmi.server.hostname=kafka -Dcom.sun.management.jmxremote.rmi.port=9997"
  #   - JMX_PORT=9997
  # kafka3:
  #   image: confluentinc/cp-kafka
  #   healthcheck:
  #     test: ps augwwx | egrep [S]upportedKafka
  #   depends_on:
  #   - zookeeper
  #   ports:
  #   - "9093:9093"
  #   - "9997"
  #   environment:
  #   - KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://kafka3:9093
  #   - KAFKA_LISTENERS=PLAINTEXT://0.0.0.0:9093
  #   - KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181
  #   - KAFKA_BROKER_ID=3
  #   - BOOTSTRAP_SERVERS=kafka1:9091,kafka2:9092,kafka3:9093
  #   - ZOOKEEPER=zookeeper:2181
  #   - "KAFKA_JMX_OPTS=-Dcom.sun.management.jmxremote -Dcom.sun.management.jmxremote.authenticate=false -Dcom.sun.management.jmxremote.ssl=false -Djava.rmi.server.hostname=kafka -Dcom.sun.management.jmxremote.rmi.port=9997"
  #   - JMX_PORT=9997
  # kafka-manager:
  #   image: sheepkiller/kafka-manager:1.3.1.8
  #   ports:
  #     - "9000:9000"
  #   depends_on:
  #     - zookeeper
  #     - kafka1
  #     - kafka2
  #     - kafka3
  #     - server-john
  #     - server-paul
  #     - server-george
  #     - server-ringo
  #   environment:
  #     ZK_HOSTS: zookeeper:2181
  #     APPLICATION_SECRET: letmein
  #     KM_ARGS: -Djava.net.preferIPv4Stack=true
  #   # networks:
  #   #   - app_net
  # haproxy:
  #   build: ./haproxy
  #   depends_on:
  #     - server-john
  #     - server-paul
  #     - server-george
  #     - server-ringo
  #   ports:
  #   - "3000:80"
  # server-john:
  #   build: ./server
  #   links:
  #     - redis
  #   expose:
  #     - "3000"
  #   environment:
  #     - NAME=John
  # server-paul:
  #   build: ./server
  #   depends_on:
  #     - redis
  #   expose:
  #     - "3000"
  #   environment:
  #     - NAME=Paul
  server-george:
    build: ./server
    depends_on:
      - redis
    expose:
      - "3000"
    environment:
      - NAME=George
  server-ringo:
    build: ./server
    depends_on:
      - redis
    expose:
      - "3000"
    environment:
      - NAME=Ringo
  redis:
    image: redis:alpine
    expose:
      - "6379"
# volumes:
#   logs:
#     driver: local







